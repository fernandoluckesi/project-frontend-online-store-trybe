{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { REQUEST_DATA, RECEIVE_DATA, RECEIVE_FAIL, INPUT_VALUE, CATEGORYID_VALUE, CANCEL_REQUEST } from '../actions';\nconst stateDefault = {\n  isFetching: false,\n  data: [],\n  resServer: false\n};\n\nconst requestData = (state = stateDefault, action) => {\n  switch (action.type) {\n    case REQUEST_DATA:\n      return { ...state,\n        isFetching: true\n      };\n\n    case RECEIVE_DATA:\n      return { ...state,\n        isFetching: false,\n        data: action.data,\n        resServer: true\n      };\n\n    case RECEIVE_FAIL:\n      return { ...state,\n        error: action.error,\n        resServer: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst stateSearchInputValue = {\n  value: '',\n  message: ''\n};\n\nconst searchInputValueReducer = (state = stateSearchInputValue, action) => {\n  switch (action.type) {\n    case INPUT_VALUE:\n      return { ...state,\n        value: action.value,\n        message: action.message\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst stateCategoryIdValue = {\n  value: ''\n};\n\nconst categoryIdValueReducer = (state = stateCategoryIdValue, action) => {\n  switch (action.type) {\n    case CATEGORYID_VALUE:\n      return { ...state,\n        value: action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  requestData,\n  searchInputValueReducer,\n  categoryIdValueReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/reducers/index.js"],"names":["combineReducers","REQUEST_DATA","RECEIVE_DATA","RECEIVE_FAIL","INPUT_VALUE","CATEGORYID_VALUE","CANCEL_REQUEST","stateDefault","isFetching","data","resServer","requestData","state","action","type","error","stateSearchInputValue","value","message","searchInputValueReducer","stateCategoryIdValue","categoryIdValueReducer","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,gBALF,EAMEC,cANF,QAOO,YAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,YAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKN,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,IAAI,EAAEI,MAAM,CAACJ,IAHR;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKP,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFT;AAGLL,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF;AACE,aAAOE,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,MAAMI,qBAAqB,GAAG;AAC5BC,EAAAA,KAAK,EAAE,EADqB;AAE5BC,EAAAA,OAAO,EAAE;AAFmB,CAA9B;;AAKA,MAAMC,uBAAuB,GAAG,CAACP,KAAK,GAAGI,qBAAT,EAAgCH,MAAhC,KAA2C;AACzE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELK,QAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFT;AAGLC,QAAAA,OAAO,EAAEL,MAAM,CAACK;AAHX,OAAP;;AAKF;AACE,aAAON,KAAP;AARJ;AAUD,CAXD;;AAaA,MAAMQ,oBAAoB,GAAG;AAC3BH,EAAAA,KAAK,EAAE;AADoB,CAA7B;;AAIA,MAAMI,sBAAsB,GAAG,CAACT,KAAK,GAAGQ,oBAAT,EAA+BP,MAA/B,KAA0C;AACvE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,gBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELK,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAFT,OAAP;;AAIF;AACE,aAAOL,KAAP;AAPJ;AASD,CAVD;;AAYA,MAAMU,WAAW,GAAGtB,eAAe,CAAC;AAAEW,EAAAA,WAAF;AAAeQ,EAAAA,uBAAf;AAAwCE,EAAAA;AAAxC,CAAD,CAAnC;AAEA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  REQUEST_DATA,\n  RECEIVE_DATA,\n  RECEIVE_FAIL,\n  INPUT_VALUE,\n  CATEGORYID_VALUE,\n  CANCEL_REQUEST\n} from '../actions';\n\nconst stateDefault = {\n  isFetching: false,\n  data: [],\n  resServer: false,\n};\n\nconst requestData = (state = stateDefault, action) => {\n  switch (action.type) {\n    case REQUEST_DATA:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_DATA:\n      return {\n        ...state,\n        isFetching: false,\n        data: action.data,\n        resServer: true,\n      };\n    case RECEIVE_FAIL:\n      return {\n        ...state,\n        error: action.error,\n        resServer: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst stateSearchInputValue = {\n  value: '',\n  message: '',\n};\n\nconst searchInputValueReducer = (state = stateSearchInputValue, action) => {\n  switch (action.type) {\n    case INPUT_VALUE:\n      return {\n        ...state,\n        value: action.value,\n        message: action.message,\n      };\n    default:\n      return state;\n  }\n};\n\nconst stateCategoryIdValue = {\n  value: '',\n}\n\nconst categoryIdValueReducer = (state = stateCategoryIdValue, action) => {\n  switch (action.type) {\n    case CATEGORYID_VALUE:\n      return {\n        ...state,\n        value: action.value,\n      };\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({ requestData, searchInputValueReducer, categoryIdValueReducer });\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}