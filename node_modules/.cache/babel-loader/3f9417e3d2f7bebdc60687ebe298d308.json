{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/AsideCategories.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../services/api';\nimport Loading from './Loading';\nimport { fetchGetProductsFromCategoryAndQuery, cancelRequest } from '../actions';\n\nclass AsideCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    getCategories().then(categories => {\n      this.setState({\n        categories,\n        isLoading: false\n      });\n    });\n  }\n\n  onChangeSearchCategoryId(event) {\n    const query = event.target.value.replace(/\\s/g, '');\n  }\n\n  render() {\n    const {\n      isLoading,\n      categories\n    } = this.state;\n    if (isLoading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 27\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"input-empty\",\n      name: \"categorieItem\",\n      value: \"\",\n      onChange: e => this.onChangeSearchCategoryId(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Sem categoria\"), categories.map(categorie => /*#__PURE__*/React.createElement(\"div\", {\n      key: categorie.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: categorie.id,\n      name: \"categorieItem\",\n      value: categorie.id,\n      onChange: e => this.onChangeSearchCategoryId(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: categorie.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, categorie.name))));\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchGetProductsFromCategoryAndQuery: (categoryId, query) => dispatch(fetchGetProductsFromCategoryAndQuery(categoryId, query))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsideCategories);","map":{"version":3,"sources":["/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/AsideCategories.js"],"names":["React","Component","connect","getCategories","Loading","fetchGetProductsFromCategoryAndQuery","cancelRequest","AsideCategories","constructor","props","state","isLoading","categories","componentDidMount","then","setState","onChangeSearchCategoryId","event","query","target","value","replace","render","e","map","categorie","id","name","mapStateToProps","mapDispatchToProps","dispatch","categoryId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SACEC,oCADF,EAEEC,aAFF,QAGO,YAHP;;AAMA,MAAMC,eAAN,SAA8BN,SAA9B,CAAwC;AACtCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBV,IAAAA,aAAa,GACVW,IADH,CACSF,UAAD,IAAgB;AACpB,WAAKG,QAAL,CAAc;AACZH,QAAAA,UADY;AAEZD,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KANH;AAOD;;AAEDK,EAAAA,wBAAwB,CAACC,KAAD,EAAQ;AAE9B,UAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,OAAnB,CAA2B,KAA3B,EAAkC,EAAlC,CAAd;AAED;;AAEDC,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEX,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA4B,KAAKF,KAAvC;AAEA,QAAIC,SAAJ,EAAe,oBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAEf,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,IAAI,EAAC,eAHP;AAIE,MAAA,KAAK,EAAC,EAJR;AAKE,MAAA,QAAQ,EAAGY,CAAD,IACR,KAAKP,wBAAL,CAA8BO,CAA9B,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF,EASGX,UAAU,CAACY,GAAX,CAAgBC,SAAD,iBACd;AAAK,MAAA,GAAG,EAAEA,SAAS,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,EAAE,EAAED,SAAS,CAACC,EAFhB;AAGE,MAAA,IAAI,EAAC,eAHP;AAIE,MAAA,KAAK,EAAED,SAAS,CAACC,EAJnB;AAKE,MAAA,QAAQ,EAAGH,CAAD,IACR,KAAKP,wBAAL,CAA8BO,CAA9B,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAO,MAAA,OAAO,EAAEE,SAAS,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BD,SAAS,CAACE,IAAzC,CARF,CADD,CATH,CADF;AAwBD;;AAxDqC;;AA2DxC,MAAMC,eAAe,GAAIlB,KAAD,KAAY,EAAZ,CAAxB;;AAIA,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACxCzB,EAAAA,oCAAoC,EAAE,CAAC0B,UAAD,EAAab,KAAb,KAAwBY,QAAQ,CAACzB,oCAAoC,CAAC0B,UAAD,EAAab,KAAb,CAArC;AAD9B,CAAf,CAA3B;;AAIA,eAAehB,OAAO,CAAC0B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CtB,eAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../services/api'\nimport Loading from './Loading';\nimport {\n  fetchGetProductsFromCategoryAndQuery,\n  cancelRequest,\n} from '../actions';\n\n\nclass AsideCategories extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      categories: [],\n    };\n  }\n\n  componentDidMount() {\n    getCategories()\n      .then((categories) => {\n        this.setState({\n          categories,\n          isLoading: false,\n        })\n      })\n  }\n\n  onChangeSearchCategoryId(event) {\n    \n    const query = event.target.value.replace(/\\s/g, '');\n    \n  }\n\n  render() {\n\n    const { isLoading, categories } = this.state;\n\n    if (isLoading) return <Loading />;\n\n    return (\n      <div>\n        <input\n          type=\"radio\"\n          id=\"input-empty\"\n          name=\"categorieItem\"\n          value=\"\"\n          onChange={(e) =>\n            this.onChangeSearchCategoryId(e)} />\n        <label htmlFor=\"input-empty\">Sem categoria</label>\n        {categories.map((categorie) =>\n          <div key={categorie.id}>\n            <input\n              type=\"radio\"\n              id={categorie.id}\n              name=\"categorieItem\"\n              value={categorie.id}\n              onChange={(e) =>\n                this.onChangeSearchCategoryId(e)} />\n            <label htmlFor={categorie.id}>{categorie.name}</label>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  \n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGetProductsFromCategoryAndQuery: (categoryId, query) => (dispatch(fetchGetProductsFromCategoryAndQuery(categoryId, query))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsideCategories);\n"]},"metadata":{},"sourceType":"module"}