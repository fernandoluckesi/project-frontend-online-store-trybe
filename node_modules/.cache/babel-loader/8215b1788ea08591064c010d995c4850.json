{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { REQUEST_DATA, RECEIVE_DATA, RECEIVE_FAIL, INPUT_VALUE } from '../actions';\nconst stateDefault = {\n  isFetching: false,\n  data: [],\n  resServer: false\n};\n\nconst requestData = (state = stateDefault, action) => {\n  switch (action.type) {\n    case REQUEST_DATA:\n      return { ...state,\n        isFetching: true\n      };\n\n    case RECEIVE_DATA:\n      return { ...state,\n        isFetching: false,\n        data: action.data,\n        resServer: true\n      };\n\n    case RECEIVE_FAIL:\n      return { ...state,\n        error: action.error,\n        resServer: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst stateSearchInputValue = {\n  value: ''\n};\n\nconst searchInputValueReducer = (state = stateSearchInputValue, action) => {\n  switch (action.type) {\n    case INPUT_VALUE:\n      return { ...state,\n        value: action.value\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  requestData,\n  searchInputValueReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/reducers/index.js"],"names":["combineReducers","REQUEST_DATA","RECEIVE_DATA","RECEIVE_FAIL","INPUT_VALUE","stateDefault","isFetching","data","resServer","requestData","state","action","type","error","stateSearchInputValue","value","searchInputValueReducer","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,WAJF,QAKO,YALP;AAOA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKJ,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,IAAI,EAAEI,MAAM,CAACJ,IAHR;AAILC,QAAAA,SAAS,EAAE;AAJN,OAAP;;AAMF,SAAKL,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFT;AAGLL,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF;AACE,aAAOE,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,MAAMI,qBAAqB,GAAG;AAC5BC,EAAAA,KAAK,EAAE;AADqB,CAA9B;;AAIA,MAAMC,uBAAuB,GAAG,CAACN,KAAK,GAAGI,qBAAT,EAAgCH,MAAhC,KAA2C;AACzE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELK,QAAAA,KAAK,EAAEJ,MAAM,CAACI;AAFT,OAAP;;AAIA;AACE,aAAOL,KAAP;AAPN;AASD,CAVD;;AAYA,MAAMO,WAAW,GAAGjB,eAAe,CAAC;AAAES,EAAAA,WAAF;AAAeO,EAAAA;AAAf,CAAD,CAAnC;AAEA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  REQUEST_DATA,\n  RECEIVE_DATA,\n  RECEIVE_FAIL,\n  INPUT_VALUE,\n} from '../actions';\n\nconst stateDefault = {\n  isFetching: false,\n  data: [],\n  resServer: false,\n};\n\nconst requestData = (state = stateDefault, action) => {\n  switch (action.type) {\n    case REQUEST_DATA:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_DATA:\n      return {\n        ...state,\n        isFetching: false,\n        data: action.data,\n        resServer: true,\n      };\n    case RECEIVE_FAIL:\n      return {\n        ...state,\n        error: action.error,\n        resServer: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst stateSearchInputValue = {\n  value: '',\n};\n\nconst searchInputValueReducer = (state = stateSearchInputValue, action) => {\n  switch (action.type) {\n    case INPUT_VALUE:\n      return {\n        ...state,\n        value: action.value,\n      };\n      default:\n        return state;\n  }\n};\n\nconst rootReducer = combineReducers({ requestData, searchInputValueReducer });\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}