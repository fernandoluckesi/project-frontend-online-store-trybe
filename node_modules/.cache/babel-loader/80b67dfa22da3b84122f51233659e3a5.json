{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/SearchInput.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGetProductsFromCategoryAndQuery } from '../actions';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\n\nclass SearchInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeSearchInputValue = event => {\n      this.setState({\n        searchInputValue: event.target.value\n      });\n    };\n\n    this.onKeyPressSearch = event => {\n      if (event.keyCode === 13) {\n        const {\n          dispatchSearchInputValue\n        } = this.props;\n        dispatchSearchInputValue(event.target.value);\n        this.setState({\n          searchInputValue: ''\n        });\n      }\n    };\n\n    this.onClickSearch = value => {\n      const {\n        getProductsFromCategoryAndQuery\n      } = this.props;\n      getProductsFromCategoryAndQuery(value);\n      this.setState({\n        searchInputValue: ''\n      });\n    };\n\n    this.state = {\n      searchInputValue: ' '\n    };\n  }\n\n  componentDidMount() {\n    getProductsFromCategoryAndQuery(null, '').then(res => console.log('aqui', res));\n    const {\n      searchInputValue\n    } = this.state;\n    if (searchInputValue) console.log('deu ruim');\n    if (!searchInputValue) console.log('deu bom');\n  }\n\n  render() {\n    const {\n      searchInputValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Pesquisar\",\n      value: searchInputValue,\n      onChange: e => this.onChangeSearchInputValue(e),\n      onKeyUp: e => this.onKeyPressSearch(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onClickSearch(searchInputValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, \"Lupa\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProductsFromCategoryAndQuery: value => dispatch(fetchGetProductsFromCategoryAndQuery(null, value))\n});\n\nexport default connect(null, mapDispatchToProps)(SearchInput);","map":{"version":3,"sources":["/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/SearchInput.js"],"names":["React","Component","connect","fetchGetProductsFromCategoryAndQuery","getProductsFromCategoryAndQuery","SearchInput","constructor","props","onChangeSearchInputValue","event","setState","searchInputValue","target","value","onKeyPressSearch","keyCode","dispatchSearchInputValue","onClickSearch","state","componentDidMount","then","res","console","log","render","e","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oCAAT,QAAqD,YAArD;AACA,SAASC,+BAAT,QAAgD,iBAAhD;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,wBAhBmB,GAgBSC,KAAD,IAAW;AACpC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAAjC,OAAd;AACD,KAlBkB;;AAAA,SAoBnBC,gBApBmB,GAoBCL,KAAD,IAAW;AAC5B,UAAIA,KAAK,CAACM,OAAN,KAAkB,EAAtB,EAA0B;AACxB,cAAM;AAAEC,UAAAA;AAAF,YAA+B,KAAKT,KAA1C;AACAS,QAAAA,wBAAwB,CAACP,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAxB;AACA,aAAKH,QAAL,CAAc;AAAEC,UAAAA,gBAAgB,EAAE;AAApB,SAAd;AACD;AACF,KA1BkB;;AAAA,SA4BnBM,aA5BmB,GA4BFJ,KAAD,IAAW;AACzB,YAAM;AAAET,QAAAA;AAAF,UAAsC,KAAKG,KAAjD;AACAH,MAAAA,+BAA+B,CAACS,KAAD,CAA/B;AACA,WAAKH,QAAL,CAAc;AAAEC,QAAAA,gBAAgB,EAAE;AAApB,OAAd;AACD,KAhCkB;;AAGjB,SAAKO,KAAL,GAAa;AACXP,MAAAA,gBAAgB,EAAE;AADP,KAAb;AAGD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClBf,IAAAA,+BAA+B,CAAC,IAAD,EAAO,EAAP,CAA/B,CACGgB,IADH,CACSC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,GAApB,CADjB;AAEE,UAAM;AAAEV,MAAAA;AAAF,QAAuB,KAAKO,KAAlC;AACF,QAAIP,gBAAJ,EAAsBW,OAAO,CAACC,GAAR,CAAY,UAAZ;AACtB,QAAI,CAACZ,gBAAL,EAAuBW,OAAO,CAACC,GAAR,CAAY,SAAZ;AACxB;;AAoBDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA;AAAF,QAAuB,KAAKO,KAAlC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,WAAW,EAAC,WAFd;AAGE,MAAA,KAAK,EAAEP,gBAHT;AAIE,MAAA,QAAQ,EAAGc,CAAD,IAAO,KAAKjB,wBAAL,CAA8BiB,CAA9B,CAJnB;AAKE,MAAA,OAAO,EAAGA,CAAD,IAAO,KAAKX,gBAAL,CAAsBW,CAAtB,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKR,aAAL,CAAmBN,gBAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF;AAYD;;AAjDiC;;AAoDpC,MAAMe,kBAAkB,GAAIC,QAAD,KAAe;AACxCvB,EAAAA,+BAA+B,EAAGS,KAAD,IAAYc,QAAQ,CAACxB,oCAAoC,CAAC,IAAD,EAAOU,KAAP,CAArC;AADb,CAAf,CAA3B;;AAIA,eAAeX,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCrB,WAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGetProductsFromCategoryAndQuery } from '../actions';\nimport { getProductsFromCategoryAndQuery } from '../services/api';\n\nclass SearchInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchInputValue: ' ',\n    };\n  }\n\n  componentDidMount() {\n    getProductsFromCategoryAndQuery(null, '')\n      .then((res) => console.log('aqui', res))\n      const { searchInputValue } = this.state;\n    if (searchInputValue) console.log('deu ruim')\n    if (!searchInputValue) console.log('deu bom')\n  }\n\n  onChangeSearchInputValue = (event) => {\n    this.setState({ searchInputValue: event.target.value })\n  }\n\n  onKeyPressSearch = (event) => {\n    if (event.keyCode === 13) {\n      const { dispatchSearchInputValue } = this.props;\n      dispatchSearchInputValue(event.target.value);\n      this.setState({ searchInputValue: '' });\n    } \n  }\n\n  onClickSearch = (value) => {\n    const { getProductsFromCategoryAndQuery } = this.props;\n    getProductsFromCategoryAndQuery(value);\n    this.setState({ searchInputValue: '' });\n  }\n\n  render() {\n    const { searchInputValue } = this.state;\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Pesquisar\"\n          value={searchInputValue}\n          onChange={(e) => this.onChangeSearchInputValue(e)}\n          onKeyUp={(e) => this.onKeyPressSearch(e)}\n        />\n        <button onClick={() => this.onClickSearch(searchInputValue)}>Lupa</button>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProductsFromCategoryAndQuery: (value) => (dispatch(fetchGetProductsFromCategoryAndQuery(null, value))),\n});\n\nexport default connect(null, mapDispatchToProps)(SearchInput);\n"]},"metadata":{},"sourceType":"module"}