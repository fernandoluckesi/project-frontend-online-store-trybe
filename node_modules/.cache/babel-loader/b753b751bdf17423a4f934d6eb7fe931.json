{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/SearchInput.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGetProductsFromCategoryAndQuery, inputQuery } from '../actions';\n\nclass SearchInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeSearchInputValue = event => {\n      this.setState({\n        searchInputValue: event.target.value\n      });\n    };\n\n    this.onKeyPressSearch = event => {\n      const {\n        fetchGetProductsFromCategoryAndQuery,\n        inputsValues,\n        inputQuery\n      } = this.props;\n      const categoryIdValue = inputsValues.categoryIdValue;\n      const queryValue = event.target.value.replace(/\\s/g, '');\n\n      if (event.keyCode === 13 && queryValue) {\n        inputQuery(queryValue);\n        fetchGetProductsFromCategoryAndQuery(categoryIdValue, queryValue);\n      }\n    };\n\n    this.onClickSearch = value => {\n      const {\n        fetchGetProductsFromCategoryAndQuery,\n        inputsValues,\n        inputQuery\n      } = this.props;\n      const categoryIdValue = inputsValues.categoryIdValue;\n      const queryValue = value.replace(/\\s/g, '');\n      inputQuery(value);\n\n      if (queryValue) {\n        fetchGetProductsFromCategoryAndQuery(categoryIdValue, queryValue);\n      }\n    };\n\n    this.state = {\n      searchInputValue: '',\n      searchInputValueEmptyMsg: ''\n    };\n  }\n\n  render() {\n    const {\n      searchInputValue,\n      searchInputValueEmptyMsg\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Pesquisar\",\n      value: searchInputValue,\n      onChange: e => this.onChangeSearchInputValue(e),\n      onKeyUp: e => this.onKeyPressSearch(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onClickSearch(searchInputValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Lupa\"), searchInputValueEmptyMsg && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 38\n      }\n    }, searchInputValueEmptyMsg));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  inputsValues: state.inputsValues\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchGetProductsFromCategoryAndQuery: (categoryId, query) => dispatch(fetchGetProductsFromCategoryAndQuery(categoryId, query)),\n  inputQuery: value => dispatch(inputQuery(value))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);","map":{"version":3,"sources":["/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/SearchInput.js"],"names":["React","Component","connect","fetchGetProductsFromCategoryAndQuery","inputQuery","SearchInput","constructor","props","onChangeSearchInputValue","event","setState","searchInputValue","target","value","onKeyPressSearch","inputsValues","categoryIdValue","queryValue","replace","keyCode","onClickSearch","state","searchInputValueEmptyMsg","render","e","mapStateToProps","mapDispatchToProps","dispatch","categoryId","query"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGetProductsFromCategoryAndQuery, inputQuery } from '../actions';\n\nclass SearchInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchInputValue: '',\n      searchInputValueEmptyMsg: '',\n    };\n  }\n\n  onChangeSearchInputValue = (event) => {\n    this.setState({ searchInputValue: event.target.value })\n  }\n\n  onKeyPressSearch = (event) => {\n    const { fetchGetProductsFromCategoryAndQuery, inputsValues, inputQuery } = this.props;\n    const categoryIdValue = inputsValues.categoryIdValue;\n    const queryValue = event.target.value.replace(/\\s/g, '');\n    if (event.keyCode === 13 && queryValue) {\n      inputQuery(queryValue);\n      fetchGetProductsFromCategoryAndQuery(categoryIdValue, queryValue);\n    }\n  }\n\n  onClickSearch = (value) => {\n    const { fetchGetProductsFromCategoryAndQuery, inputsValues, inputQuery } = this.props;\n    const categoryIdValue = inputsValues.categoryIdValue;\n    const queryValue = value.replace(/\\s/g, '');\n    inputQuery(value);\n    if (queryValue) {\n      fetchGetProductsFromCategoryAndQuery(categoryIdValue, queryValue);\n    }\n  }\n\n  render() {\n    const { searchInputValue, searchInputValueEmptyMsg } = this.state;\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Pesquisar\"\n          value={searchInputValue}\n          onChange={(e) => this.onChangeSearchInputValue(e)}\n          onKeyUp={(e) => this.onKeyPressSearch(e)}\n        />\n        <button onClick={() => this.onClickSearch(searchInputValue)}>Lupa</button>\n        {searchInputValueEmptyMsg && <p>{searchInputValueEmptyMsg}</p>}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  inputsValues: state.inputsValues,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGetProductsFromCategoryAndQuery: (categoryId, query) => (dispatch(fetchGetProductsFromCategoryAndQuery(categoryId, query))),\n  inputQuery: (value) => (dispatch(inputQuery(value))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);\n"]},"metadata":{},"sourceType":"module"}