{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { REQUEST_DATA, RECEIVE_DATA, RECEIVE_FAIL } from '../actions';\nconst stateDefault = {\n  isFetching: false,\n  data: []\n};\n\nconst requestData = (state = stateDefault, action) => {\n  switch (action.type) {\n    case REQUEST_DATA:\n      return { ...state,\n        isFetching: true\n      };\n\n    case RECEIVE_DATA:\n      return { ...state,\n        isFetching: false,\n        data: action.data\n      };\n\n    case RECEIVE_FAIL:\n      return { ...state,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  requestData\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/reducers/index.js"],"names":["combineReducers","REQUEST_DATA","RECEIVE_DATA","RECEIVE_FAIL","stateDefault","isFetching","data","requestData","state","action","type","error","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SACEC,YADF,EAEEC,YAFF,EAGEC,YAHF,QAIO,YAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,YAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKH,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAHR,OAAP;;AAKF,SAAKH,YAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACE;AAFT,OAAP;;AAIF;AACE,aAAOH,KAAP;AAlBJ;AAoBD,CArBD;;AAuBA,MAAMI,WAAW,GAAGZ,eAAe,CAAC;AAAEO,EAAAA;AAAF,CAAD,CAAnC;AAEA,eAAeK,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport {\n  REQUEST_DATA,\n  RECEIVE_DATA,\n  RECEIVE_FAIL,\n} from '../actions';\n\nconst stateDefault = {\n  isFetching: false,\n  data: [],\n};\n\nconst requestData = (state = stateDefault, action) => {\n  switch (action.type) {\n    case REQUEST_DATA:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case RECEIVE_DATA:\n      return {\n        ...state,\n        isFetching: false,\n        data: action.data,\n      };\n    case RECEIVE_FAIL:\n      return {\n        ...state,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({ requestData });\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}