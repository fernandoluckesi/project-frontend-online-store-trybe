{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/SearchInput.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGetProductsFromCategoryAndQuery, searchInputValueAction } from '../actions';\n\nclass SearchInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeSearchInputValue = event => {\n      this.setState({\n        searchInputValue: event.target.value\n      });\n    };\n\n    this.onKeyPressSearch = event => {\n      const {\n        getProductsFromCategoryAndQuery,\n        searchInputValueAction\n      } = this.props;\n      const value = event.target.value.replace(/\\s/g, '');\n      const {\n        searchInputValue\n      } = this.state;\n      let message;\n\n      if (event.keyCode === 13 && value) {\n        getProductsFromCategoryAndQuery(value);\n        message = '';\n        searchInputValueAction(searchInputValue, message);\n        this.setState({\n          searchInputValue: ''\n        });\n      } else if (event.keyCode === 13 && !value) {\n        message = 'Digite algum termo para ser buscado';\n        searchInputValueAction(value, message);\n      }\n    };\n\n    this.onClickSearch = value => {\n      const {\n        getProductsFromCategoryAndQuery,\n        searchInputValueAction\n      } = this.props;\n      const {\n        searchInputValue\n      } = this.state;\n      let message;\n\n      if (value.replace(/\\s/g, '')) {\n        getProductsFromCategoryAndQuery(value.replace(/\\s/g, ''));\n        message = '';\n        searchInputValueAction(searchInputValue, message);\n        this.setState({\n          searchInputValue: ''\n        });\n      } else {\n        message = 'Digite algum termo para ser buscado';\n        searchInputValueAction(value.replace(/\\s/g, ''), message);\n      }\n    };\n\n    this.state = {\n      searchInputValue: ''\n    };\n  }\n\n  render() {\n    const {\n      searchInputValue\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Pesquisar\",\n      value: searchInputValue,\n      onChange: e => this.onChangeSearchInputValue(e),\n      onKeyUp: e => this.onKeyPressSearch(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.onClickSearch(searchInputValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, \"Lupa\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getProductsFromCategoryAndQuery: value => dispatch(fetchGetProductsFromCategoryAndQuery(null, value)),\n  searchInputValueAction: (value, message) => dispatch(searchInputValueAction(value, message))\n});\n\nexport default connect(null, mapDispatchToProps)(SearchInput);","map":{"version":3,"sources":["/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/SearchInput.js"],"names":["React","Component","connect","fetchGetProductsFromCategoryAndQuery","searchInputValueAction","SearchInput","constructor","props","onChangeSearchInputValue","event","setState","searchInputValue","target","value","onKeyPressSearch","getProductsFromCategoryAndQuery","replace","state","message","keyCode","onClickSearch","render","e","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGetProductsFromCategoryAndQuery, searchInputValueAction } from '../actions';\n\nclass SearchInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchInputValue: '',\n    };\n  }\n\n  onChangeSearchInputValue = (event) => {\n    this.setState({ searchInputValue: event.target.value })\n  }\n\n  onKeyPressSearch = (event) => {\n    const { getProductsFromCategoryAndQuery, searchInputValueAction } = this.props;\n    const value = event.target.value.replace(/\\s/g, '');\n    const { searchInputValue } = this.state;\n    let message;\n    if (event.keyCode === 13 && value) {\n      getProductsFromCategoryAndQuery(value);\n      message = '';\n      searchInputValueAction(searchInputValue, message)\n      this.setState({ searchInputValue: '' });\n    } else if (event.keyCode === 13 && !value) {\n      message = 'Digite algum termo para ser buscado';\n      searchInputValueAction(value, message);\n    }\n  }\n\n  onClickSearch = (value) => {\n    const { getProductsFromCategoryAndQuery, searchInputValueAction } = this.props;\n    const { searchInputValue } = this.state;\n    let message;\n    if (value.replace(/\\s/g, '')) {\n      getProductsFromCategoryAndQuery(value.replace(/\\s/g, ''));\n      message = '';\n      searchInputValueAction(searchInputValue, message)\n      this.setState({ searchInputValue: '' });\n    } else {\n      message = 'Digite algum termo para ser buscado';\n      searchInputValueAction(value.replace(/\\s/g, ''), message)\n    }\n  }\n\n  render() {\n    const { searchInputValue } = this.state;\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Pesquisar\"\n          value={searchInputValue}\n          onChange={(e) => this.onChangeSearchInputValue(e)}\n          onKeyUp={(e) => this.onKeyPressSearch(e)}\n        />\n        <button onClick={() => this.onClickSearch(searchInputValue)}>Lupa</button>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getProductsFromCategoryAndQuery: (value) => (dispatch(fetchGetProductsFromCategoryAndQuery(null, value))),\n  searchInputValueAction: (value, message) => (dispatch(searchInputValueAction(value, message)))\n});\n\nexport default connect(null, mapDispatchToProps)(SearchInput);\n"]},"metadata":{},"sourceType":"module"}