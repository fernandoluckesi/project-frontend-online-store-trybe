{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/AsideCategories.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../services/api';\nimport Loading from './Loading';\nimport { fetchGetProductsFromCategoryAndQuery, categoryIdValueAction, cancelRequest, searchInputValueAction } from '../actions';\n\nclass AsideCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      categories: []\n    };\n  }\n\n  componentDidMount() {\n    getCategories().then(categories => {\n      this.setState({\n        categories,\n        isLoading: false\n      });\n    });\n  }\n\n  onChangeSearchCategoryId(event) {\n    const {\n      searchInputValueReducer\n    } = this.props;\n    const {\n      fetchGetProductsFromCategoryAndQuery,\n      categoryIdValueAction,\n      searchInputValueAction,\n      cancelRequest,\n      data,\n      resServer\n    } = this.props;\n    const categoryId = event.target.value;\n    const query = searchInputValueReducer.replace(/\\s/g, '');\n    categoryIdValueAction(categoryId);\n\n    if (!categoryId && !query) {\n      cancelRequest();\n    }\n\n    if (categoryId || query) {\n      fetchGetProductsFromCategoryAndQuery(categoryId, query);\n    }\n\n    if (resServer && data.results.length === 0) {\n      fetchGetProductsFromCategoryAndQuery(categoryId);\n      /* searchInputValueAction('', ''); */\n    }\n  }\n\n  render() {\n    const {\n      isLoading,\n      categories\n    } = this.state;\n    if (isLoading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: \"input-empty\",\n      name: \"categorieItem\",\n      value: \"\",\n      onChange: e => this.onChangeSearchCategoryId(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-empty\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Sem categoria\"), categories.map(categorie => /*#__PURE__*/React.createElement(\"div\", {\n      key: categorie.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      id: categorie.id,\n      name: \"categorieItem\",\n      value: categorie.id,\n      onChange: e => this.onChangeSearchCategoryId(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: categorie.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, categorie.name))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  searchInputValueReducer: state.searchInputValueReducer.value,\n  categoryIdValueReducer: state.categoryIdValueReducer.value,\n  data: state.requestData.data,\n  resServer: state.requestData.resServer\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchGetProductsFromCategoryAndQuery: (categoryId, query) => dispatch(fetchGetProductsFromCategoryAndQuery(categoryId, query)),\n  categoryIdValueAction: value => dispatch(categoryIdValueAction(value)),\n  searchInputValueAction: (value, message) => dispatch(searchInputValueAction(value, message)),\n  cancelRequest: () => dispatch(cancelRequest())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsideCategories);","map":{"version":3,"sources":["/home/fernando/Desktop/projetos_github/project-frontend-online-store-trybe/src/components/AsideCategories.js"],"names":["React","Component","connect","getCategories","Loading","fetchGetProductsFromCategoryAndQuery","categoryIdValueAction","cancelRequest","searchInputValueAction","AsideCategories","constructor","props","state","isLoading","categories","componentDidMount","then","setState","onChangeSearchCategoryId","event","searchInputValueReducer","data","resServer","categoryId","target","value","query","replace","results","length","render","e","map","categorie","id","name","mapStateToProps","categoryIdValueReducer","requestData","mapDispatchToProps","dispatch","message"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../services/api'\nimport Loading from './Loading';\nimport {\n  fetchGetProductsFromCategoryAndQuery,\n  categoryIdValueAction,\n  cancelRequest,\n  searchInputValueAction,\n} from '../actions';\n\n\nclass AsideCategories extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      categories: [],\n    };\n  }\n\n  componentDidMount() {\n    getCategories()\n      .then((categories) => {\n        this.setState({\n          categories,\n          isLoading: false,\n        })\n      })\n  }\n\n  onChangeSearchCategoryId(event) {\n    const { searchInputValueReducer } = this.props;\n    const {\n      fetchGetProductsFromCategoryAndQuery,\n      categoryIdValueAction,\n      searchInputValueAction,\n      cancelRequest,\n      data,\n      resServer } = this.props;\n    const categoryId = event.target.value;\n    const query = searchInputValueReducer.replace(/\\s/g, '');\n    categoryIdValueAction(categoryId);\n    if (!categoryId && !query) {\n      cancelRequest();\n    }\n    if (categoryId || query) {\n      fetchGetProductsFromCategoryAndQuery(categoryId, query);\n    }\n    if (resServer && data.results.length === 0) {\n      fetchGetProductsFromCategoryAndQuery(categoryId);\n      /* searchInputValueAction('', ''); */\n    }\n  }\n\n  render() {\n\n    const { isLoading, categories } = this.state;\n\n    if (isLoading) return <Loading />;\n\n    return (\n      <div>\n        <input\n          type=\"radio\"\n          id=\"input-empty\"\n          name=\"categorieItem\"\n          value=\"\"\n          onChange={(e) =>\n            this.onChangeSearchCategoryId(e)} />\n        <label htmlFor=\"input-empty\">Sem categoria</label>\n        {categories.map((categorie) =>\n          <div key={categorie.id}>\n            <input\n              type=\"radio\"\n              id={categorie.id}\n              name=\"categorieItem\"\n              value={categorie.id}\n              onChange={(e) =>\n                this.onChangeSearchCategoryId(e)} />\n            <label htmlFor={categorie.id}>{categorie.name}</label>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchInputValueReducer: state.searchInputValueReducer.value,\n  categoryIdValueReducer: state.categoryIdValueReducer.value,\n  data: state.requestData.data,\n  resServer: state.requestData.resServer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchGetProductsFromCategoryAndQuery: (categoryId, query) => (dispatch(fetchGetProductsFromCategoryAndQuery(categoryId, query))),\n  categoryIdValueAction: (value) => (dispatch(categoryIdValueAction(value))),\n  searchInputValueAction: (value, message) => (dispatch(searchInputValueAction(value, message))),\n  cancelRequest: () => (dispatch(cancelRequest())),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AsideCategories);\n"]},"metadata":{},"sourceType":"module"}